{"version":3,"sources":["../../app-es6/controllers/NegociacaoController.js"],"names":["ListaNegociacoes","Mensagem","NegociacaoView","MensagemView","NegociacaoService","DateHelper","Bind","Negociacao","HttpService","NegociacaoController","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","_listaNegociacoes","_mensagem","_ordemAtual","_service","_init","lista","then","listaNegociacoes","forEach","adiciona","negociacao","catch","texto","error","setInterval","importaLista","coluna","inverteOrdem","ordena","a","b","importa","negociacoes","event","preventDefault","_criaNegociacao","cadastra","mensagem","_limpaFormulario","apaga","apagar","textoParaData","value","parseInt","parseFloat","focus","console","log","inputData","inputQuantidade","inputValor","data","quantidade","valor","post","alert","erro"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["import { ListaNegociacoes } from '../models/ListaNegociacoes';\nimport { Mensagem } from '../models/Mensagem';\nimport { NegociacaoView } from '../views/NegociacaoView';\nimport { MensagemView } from '../views/MensagemView';\nimport { NegociacaoService } from '../services/NegociacaoService';\nimport { DateHelper } from '../helpers/DateHelper';\nimport { Bind } from '../helpers/Bind';\nimport { Negociacao } from '../models/Negociacao';\nimport { HttpService } from '../services/HttpService';\n\nexport class NegociacaoController {\n\n    constructor() {\n        let $ = document.querySelector.bind(document);\n\n        this._inputData = $('#data');\n        this._inputQuantidade = $('#quantidade');\n        this._inputValor = $('#valor');\n\n        this._listaNegociacoes = new Bind(\n            new ListaNegociacoes(),\n            new NegociacaoView($('#grid-negociacoes')),\n            'adiciona', 'apagar', 'ordena', 'inverteOrdem');\n\n        this._mensagem = new Bind(\n            new Mensagem(),\n            new MensagemView($('#mensagemView')),\n            'texto'\n        )\n        this._ordemAtual = '';\n\n        this._service = new NegociacaoService();\n\n        this._init();\n    }\n\n    _init() {\n        this._service\n            .lista()\n            .then(listaNegociacoes =>\n                listaNegociacoes.forEach(negociacao =>\n                    this._listaNegociacoes.adiciona(negociacao)))\n            .catch(error => this._mensagem.texto = error)\n\n        setInterval(() => {\n            this.importaLista();\n        }, 3000);\n    }\n\n    ordena(coluna) {\n        if (this._ordemAtual == coluna) {\n            this._listaNegociacoes.inverteOrdem();\n        } else {\n            this._listaNegociacoes.ordena((a, b) => a[coluna] - b[coluna]);\n        }\n        this._ordemAtual = coluna;\n    }\n\n    importaLista() {\n\n        this._service\n            .importa(this._listaNegociacoes.negociacoes)\n            .then(negociacoes => {\n                negociacoes.forEach(negociacao => {\n                    this._listaNegociacoes.adiciona(negociacao)\n                    this._mensagem.texto = 'Negociações do perido importadas'\n                })\n            })\n            .catch(error => this._mensagem.texto = error);\n    }\n\n    adiciona(event) {\n\n        event.preventDefault();\n\n        let negociacao = this._criaNegociacao();\n\n        this._service\n            .cadastra(negociacao)\n            .then(mensagem => {\n                this._listaNegociacoes.adiciona(negociacao);\n                this._mensagem.texto = mensagem;\n                this._limpaFormulario();\n            })\n            .catch(error => this._mensagem.texto = error);\n\n    }\n\n    limpaLista() {\n\n        this._service\n            .apaga()\n            .then(mensagem => {\n                this._mensagem.texto = mensagem;\n                this._listaNegociacoes.apagar();\n            })\n            .catch(error => this._mensagem.texto = error);\n    }\n\n    _criaNegociacao() {\n        return new Negociacao(\n            DateHelper.textoParaData(this._inputData.value),\n            parseInt(this._inputQuantidade.value),\n            parseFloat(this._inputValor.value)\n        );\n    }\n\n    _limpaFormulario() {\n        this._inputData.value = '';\n        this._inputQuantidade.value = 1;\n        this._inputValor.value = 0, 0;\n\n        this._inputData.focus();\n    }\n\n    sendPost(event) {\n\n        event.preventDefault();\n\n        console.log(\"Enviando post\");\n\n        let $ = document.querySelector.bind(document);\n        let inputData = $('#data');\n        let inputQuantidade = $('#quantidade');\n        let inputValor = $('#valor');\n\n        let negociacao = {\n            data: inputData.value,\n            quantidade: inputQuantidade.value,\n            valor: inputValor.value\n        };\n\n        new HttpService()\n            .post('/negociacoes', negociacao)\n            .then(() => {\n                inputData.value = '';\n                inputQuantidade.value = 1;\n                inputValor.value = 0.0;\n                inputData.focus();\n                alert('Negociação enviada com sucesso');\n            })\n            .catch(erro => alert(`Não foi possível enviar a negociação: ${erro}`));\n    }\n}"]}