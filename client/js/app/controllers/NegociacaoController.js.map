{"version":3,"sources":["../../app-es6/controllers/NegociacaoController.js"],"names":["NegociacaoController","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","_listaNegociacoes","Bind","ListaNegociacoes","NegociacaoView","_mensagem","Mensagem","MensagemView","_ordemAtual","_service","NegociacaoService","_init","lista","then","listaNegociacoes","forEach","adiciona","negociacao","catch","texto","error","setInterval","importaLista","coluna","inverteOrdem","ordena","a","b","importa","negociacoes","event","preventDefault","_criaNegociacao","cadastra","mensagem","_limpaFormulario","apaga","apagar","Negociacao","DateHelper","textoParaData","value","parseInt","parseFloat","focus","console","log","inputData","inputQuantidade","inputValor","data","quantidade","valor","HttpService","post","alert","erro"],"mappings":";;;;;;IAAMA,oB;AAEF,oCAAc;AAAA;;AACV,YAAIC,IAAIC,SAASC,aAAT,CAAuBC,IAAvB,CAA4BF,QAA5B,CAAR;;AAEA,aAAKG,UAAL,GAAkBJ,EAAE,OAAF,CAAlB;AACA,aAAKK,gBAAL,GAAwBL,EAAE,aAAF,CAAxB;AACA,aAAKM,WAAL,GAAmBN,EAAE,QAAF,CAAnB;;AAEA,aAAKO,iBAAL,GAAyB,IAAIC,IAAJ,CACrB,IAAIC,gBAAJ,EADqB,EAErB,IAAIC,cAAJ,CAAmBV,EAAE,mBAAF,CAAnB,CAFqB,EAGrB,UAHqB,EAGT,QAHS,EAGC,QAHD,EAGW,cAHX,CAAzB;;AAKA,aAAKW,SAAL,GAAiB,IAAIH,IAAJ,CACb,IAAII,QAAJ,EADa,EAEb,IAAIC,YAAJ,CAAiBb,EAAE,eAAF,CAAjB,CAFa,EAGb,OAHa,CAAjB;AAKA,aAAKc,WAAL,GAAmB,EAAnB;;AAEA,aAAKC,QAAL,GAAgB,IAAIC,iBAAJ,EAAhB;;AAEA,aAAKC,KAAL;AACH;;;;gCAEO;AAAA;;AACJ,iBAAKF,QAAL,CACKG,KADL,GAEKC,IAFL,CAEU;AAAA,uBACFC,iBAAiBC,OAAjB,CAAyB;AAAA,2BACrB,MAAKd,iBAAL,CAAuBe,QAAvB,CAAgCC,UAAhC,CADqB;AAAA,iBAAzB,CADE;AAAA,aAFV,EAKKC,KALL,CAKW;AAAA,uBAAS,MAAKb,SAAL,CAAec,KAAf,GAAuBC,KAAhC;AAAA,aALX;;AAOAC,wBAAY,YAAM;AACd,sBAAKC,YAAL;AACH,aAFD,EAEG,IAFH;AAGH;;;+BAEMC,M,EAAQ;AACX,gBAAI,KAAKf,WAAL,IAAoBe,MAAxB,EAAgC;AAC5B,qBAAKtB,iBAAL,CAAuBuB,YAAvB;AACH,aAFD,MAEO;AACH,qBAAKvB,iBAAL,CAAuBwB,MAAvB,CAA8B,UAACC,CAAD,EAAIC,CAAJ;AAAA,2BAAUD,EAAEH,MAAF,IAAYI,EAAEJ,MAAF,CAAtB;AAAA,iBAA9B;AACH;AACD,iBAAKf,WAAL,GAAmBe,MAAnB;AACH;;;uCAEc;AAAA;;AAEX,iBAAKd,QAAL,CACKmB,OADL,CACa,KAAK3B,iBAAL,CAAuB4B,WADpC,EAEKhB,IAFL,CAEU,uBAAe;AACjBgB,4BAAYd,OAAZ,CAAoB,sBAAc;AAC9B,2BAAKd,iBAAL,CAAuBe,QAAvB,CAAgCC,UAAhC;AACA,2BAAKZ,SAAL,CAAec,KAAf,GAAuB,kCAAvB;AACH,iBAHD;AAIH,aAPL,EAQKD,KARL,CAQW;AAAA,uBAAS,OAAKb,SAAL,CAAec,KAAf,GAAuBC,KAAhC;AAAA,aARX;AASH;;;iCAEQU,K,EAAO;AAAA;;AAEZA,kBAAMC,cAAN;;AAEA,gBAAId,aAAa,KAAKe,eAAL,EAAjB;;AAEA,iBAAKvB,QAAL,CACKwB,QADL,CACchB,UADd,EAEKJ,IAFL,CAEU,oBAAY;AACd,uBAAKZ,iBAAL,CAAuBe,QAAvB,CAAgCC,UAAhC;AACA,uBAAKZ,SAAL,CAAec,KAAf,GAAuBe,QAAvB;AACA,uBAAKC,gBAAL;AACH,aANL,EAOKjB,KAPL,CAOW;AAAA,uBAAS,OAAKb,SAAL,CAAec,KAAf,GAAuBC,KAAhC;AAAA,aAPX;AASH;;;qCAEY;AAAA;;AAET,iBAAKX,QAAL,CACK2B,KADL,GAEKvB,IAFL,CAEU,oBAAY;AACd,uBAAKR,SAAL,CAAec,KAAf,GAAuBe,QAAvB;AACA,uBAAKjC,iBAAL,CAAuBoC,MAAvB;AACH,aALL,EAMKnB,KANL,CAMW;AAAA,uBAAS,OAAKb,SAAL,CAAec,KAAf,GAAuBC,KAAhC;AAAA,aANX;AAOH;;;0CAEiB;AACd,mBAAO,IAAIkB,UAAJ,CACHC,WAAWC,aAAX,CAAyB,KAAK1C,UAAL,CAAgB2C,KAAzC,CADG,EAEHC,SAAS,KAAK3C,gBAAL,CAAsB0C,KAA/B,CAFG,EAGHE,WAAW,KAAK3C,WAAL,CAAiByC,KAA5B,CAHG,CAAP;AAKH;;;2CAEkB;AACf,iBAAK3C,UAAL,CAAgB2C,KAAhB,GAAwB,EAAxB;AACA,iBAAK1C,gBAAL,CAAsB0C,KAAtB,GAA8B,CAA9B;AACA,iBAAKzC,WAAL,CAAiByC,KAAjB,GAAyB,CAAzB,EAA4B,CAA5B;;AAEA,iBAAK3C,UAAL,CAAgB8C,KAAhB;AACH;;;iCAEQd,K,EAAO;;AAEZA,kBAAMC,cAAN;;AAEAc,oBAAQC,GAAR,CAAY,eAAZ;;AAEA,gBAAIpD,IAAIC,SAASC,aAAT,CAAuBC,IAAvB,CAA4BF,QAA5B,CAAR;AACA,gBAAIoD,YAAYrD,EAAE,OAAF,CAAhB;AACA,gBAAIsD,kBAAkBtD,EAAE,aAAF,CAAtB;AACA,gBAAIuD,aAAavD,EAAE,QAAF,CAAjB;;AAEA,gBAAIuB,aAAa;AACbiC,sBAAMH,UAAUN,KADH;AAEbU,4BAAYH,gBAAgBP,KAFf;AAGbW,uBAAOH,WAAWR;AAHL,aAAjB;;AAMA,gBAAIY,WAAJ,GACKC,IADL,CACU,cADV,EAC0BrC,UAD1B,EAEKJ,IAFL,CAEU,YAAM;AACRkC,0BAAUN,KAAV,GAAkB,EAAlB;AACAO,gCAAgBP,KAAhB,GAAwB,CAAxB;AACAQ,2BAAWR,KAAX,GAAmB,GAAnB;AACAM,0BAAUH,KAAV;AACAW,sBAAM,gCAAN;AACH,aARL,EASKrC,KATL,CASW;AAAA,uBAAQqC,6DAA+CC,IAA/C,CAAR;AAAA,aATX;AAUH","file":"NegociacaoController.js","sourcesContent":["class NegociacaoController {\n\n    constructor() {\n        let $ = document.querySelector.bind(document);\n\n        this._inputData = $('#data');\n        this._inputQuantidade = $('#quantidade');\n        this._inputValor = $('#valor');\n\n        this._listaNegociacoes = new Bind(\n            new ListaNegociacoes(),\n            new NegociacaoView($('#grid-negociacoes')),\n            'adiciona', 'apagar', 'ordena', 'inverteOrdem');\n\n        this._mensagem = new Bind(\n            new Mensagem(),\n            new MensagemView($('#mensagemView')),\n            'texto'\n        )\n        this._ordemAtual = '';\n\n        this._service = new NegociacaoService();\n\n        this._init();\n    }\n\n    _init() {\n        this._service\n            .lista()\n            .then(listaNegociacoes =>\n                listaNegociacoes.forEach(negociacao =>\n                    this._listaNegociacoes.adiciona(negociacao)))\n            .catch(error => this._mensagem.texto = error)\n\n        setInterval(() => {\n            this.importaLista();\n        }, 3000);\n    }\n\n    ordena(coluna) {\n        if (this._ordemAtual == coluna) {\n            this._listaNegociacoes.inverteOrdem();\n        } else {\n            this._listaNegociacoes.ordena((a, b) => a[coluna] - b[coluna]);\n        }\n        this._ordemAtual = coluna;\n    }\n\n    importaLista() {\n\n        this._service\n            .importa(this._listaNegociacoes.negociacoes)\n            .then(negociacoes => {\n                negociacoes.forEach(negociacao => {\n                    this._listaNegociacoes.adiciona(negociacao)\n                    this._mensagem.texto = 'Negociações do perido importadas'\n                })\n            })\n            .catch(error => this._mensagem.texto = error);\n    }\n\n    adiciona(event) {\n\n        event.preventDefault();\n\n        let negociacao = this._criaNegociacao();\n\n        this._service\n            .cadastra(negociacao)\n            .then(mensagem => {\n                this._listaNegociacoes.adiciona(negociacao);\n                this._mensagem.texto = mensagem;\n                this._limpaFormulario();\n            })\n            .catch(error => this._mensagem.texto = error);\n\n    }\n\n    limpaLista() {\n\n        this._service\n            .apaga()\n            .then(mensagem => {\n                this._mensagem.texto = mensagem;\n                this._listaNegociacoes.apagar();\n            })\n            .catch(error => this._mensagem.texto = error);\n    }\n\n    _criaNegociacao() {\n        return new Negociacao(\n            DateHelper.textoParaData(this._inputData.value),\n            parseInt(this._inputQuantidade.value),\n            parseFloat(this._inputValor.value)\n        );\n    }\n\n    _limpaFormulario() {\n        this._inputData.value = '';\n        this._inputQuantidade.value = 1;\n        this._inputValor.value = 0, 0;\n\n        this._inputData.focus();\n    }\n\n    sendPost(event) {\n\n        event.preventDefault();\n\n        console.log(\"Enviando post\");\n\n        let $ = document.querySelector.bind(document);\n        let inputData = $('#data');\n        let inputQuantidade = $('#quantidade');\n        let inputValor = $('#valor');\n\n        let negociacao = {\n            data: inputData.value,\n            quantidade: inputQuantidade.value,\n            valor: inputValor.value\n        };\n\n        new HttpService()\n            .post('/negociacoes', negociacao)\n            .then(() => {\n                inputData.value = '';\n                inputQuantidade.value = 1;\n                inputValor.value = 0.0;\n                inputData.focus();\n                alert('Negociação enviada com sucesso');\n            })\n            .catch(erro => alert(`Não foi possível enviar a negociação: ${erro}`));\n    }\n}"]}