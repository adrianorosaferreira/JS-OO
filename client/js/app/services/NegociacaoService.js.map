{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDAO","Negociacao","NegociacaoService","_http","get","then","listaNegociacoes","map","Date","object","data","quantidade","valor","catch","console","log","error","Error","Promise","all","obterNegociacoesSemana","obterNegociacoesSemanaAnterior","obterNegociacoesSemanaRetrasada","negociacoes","periodos","reduce","dados","periodo","concat","dado","negociacao","getConnection","connection","dao","adiciona","listaTodos","apagaTodos","obterNegociacoes","filter","some","isEquals","negociacaoExistente"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import { HttpService } from './HttpService';\nimport { ConnectionFactory } from './ConnectionFactory';\nimport { NegociacaoDAO } from '../dao/NegociacaoDAO';\nimport { Negociacao } from '../models/Negociacao';\n\nexport class NegociacaoService {\n\n    constructor() {\n        this._http = new HttpService();\n    }\n\n    obterNegociacoesSemana() {\n\n        return this._http\n            .get('negociacoes/semana')\n            .then(listaNegociacoes => {\n                return listaNegociacoes.map(object => new Negociacao(new Date(object.data), object.quantidade, object.valor));\n            })\n            .catch(error => {\n                console.log(error);\n                throw new Error('Houve algum erro ao tentar listar as negociações!');\n            })\n    }\n\n    obterNegociacoesSemanaAnterior() {\n\n        return this._http\n            .get('negociacoes/anterior')\n            .then(listaNegociacoes => {\n                return listaNegociacoes.map(object => new Negociacao(new Date(object.data), object.quantidade, object.valor));\n            })\n            .catch(error => {\n                console.log(error);\n                throw new Error('Houve algum erro ao tentar listar as negociações da semana anterior!');\n            })\n    }\n\n    obterNegociacoesSemanaRetrasada() {\n\n        return this._http\n            .get('negociacoes/retrasada')\n            .then(listaNegociacoes => {\n                return listaNegociacoes.map(object => new Negociacao(new Date(object.data), object.quantidade, object.valor));\n            })\n            .catch(error => {\n                console.log(error);\n                throw new Error('Houve algum erro ao tentar listar as negociações da semana retrasada!');\n            })\n    }\n    obterNegociacoes() {\n\n        return Promise.all([\n                this.obterNegociacoesSemana(),\n                this.obterNegociacoesSemanaAnterior(),\n                this.obterNegociacoesSemanaRetrasada()\n            ])\n            .then(periodos => {\n\n                let negociacoes = periodos\n                    .reduce((dados, periodo) => dados.concat(periodo), [])\n                    .map(dado => new Negociacao(new Date(dado.data), dado.quantidade, dado.valor));\n\n                return negociacoes;\n            })\n            .catch(error => {\n\n                throw new Error(error);\n            });\n    }\n\n    cadastra(negociacao) {\n        return ConnectionFactory\n            .getConnection()\n            .then(connection => new NegociacaoDAO(connection))\n            .then(dao => dao.adiciona(negociacao))\n            .then(() => 'Negociação adicionada com sucesso!')\n            .catch(error => {\n                console.log(error);\n                throw new Error('Não foi possivel cadastrar a negociação')\n            });\n    }\n\n    lista() {\n        return ConnectionFactory\n            .getConnection()\n            .then(connection => new NegociacaoDAO(connection))\n            .then(dao => dao.listaTodos())\n            .catch(error => {\n                console.log(error);\n                throw new Error('Não foi possivel listar as negociações')\n            });\n    }\n\n    apaga() {\n        return ConnectionFactory\n            .getConnection()\n            .then(connection => new NegociacaoDAO(connection))\n            .then(dao => dao.apagaTodos())\n            .then(() => 'Negociações pagadas com sucesso')\n            .catch(error => {\n                console.log(error);\n                throw new Error('Não foi possivel listar as negociações')\n            });\n    }\n\n    importa(listaNegociacoes) {\n        return this.obterNegociacoes()\n            .then(negociacoes =>\n                negociacoes.filter(negociacao =>\n                    !listaNegociacoes.some(negociacaoExistente =>\n                        negociacao.isEquals(negociacaoExistente)\n                    )\n                )\n            )\n            .catch(error => {\n                console.log(error);\n                throw new Error('Não foi possivel importar a lista de negociações');\n            });\n    }\n}"]}